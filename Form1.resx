<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cwAAEnMBjCK5BwAAGONJREFUeF7tnAlUFFfahuufJeNkkn/M/M6ZGI1CouIWcA0uUTQu6KghxnElaoyJ
        RpKYxN244AaobCIguy1rs4Mgi2yNgsiigogiu4qKioqJyZCExO9/v061hygoancDnXrPec69tXRV3e/9
        6ta9RdOCJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJD25SCF0uHdEML2XLljeSxXkQCGScC9NcMa2hdink7h7m5Z3+Wv9PSu6fepS1tkN
        JLuUdlaIyN0ruq90q9QzEneVRBnCYJjsD+PvUrZAVACKQIlIMTgD8gRCEjRgXxkSQU/8eJuRrKp7R9fy
        V9c6l3Yu21/Vi0KrB1Ps1VF0+Pp4SrlhSsnXJ1JcjQmFXx5KvN25rHO+W5memfjx35/uZQoGMDOWskSD
        ywAbfxJwIhwDGYC3w3wqBLzPaSRCulCPXmGxeKhWFYzv4Fr26ga3sm51YdVDKPXGJEq6PoEiLxtT0EVD
        klUZkGeFvtJ0/wv9lAnAyXD42ng6gG3oIWI5ecTD/T4E85bibq5XGn8e5AIFSHsM6eAU4J4BCYLjOIqH
        bBV5V+oZ8J0ccmkgjJ8M04eRd+XrMPWVx+J7oY8yUSIuv8nLxS5V3V8WD6vb+gWm0XHRRDa+KaMfB/cM
        58CvSfCpeGitam9555Hu5d3vxteMpRh09R7l3R8yuSVEXRlO0VdG0N7SV/K4NxEPr5tSms/dO5t3FDRl
        bks5AnAcHhd8k/qigXiKZrU0oUrPIv7CuE9iKxcyXLdILOshbn4iuZfoGbvB/ER04wEX3iDn0leeiQg8
        LuSXBpBLaRdb8RS6J9yp5srn+VnQku6+JXBPwGOCVCFZPM19WSqqOiyNrTD/IKo8bFF0eZ1FXBWtSLpI
        a1OrlaxMvkSfxlfRoqjyGmz3Whpb2aKRucf5Xp1cSrpWx197m3wqMZhrwtCnIebqaHIv12twKev6VEnZ
        pgXDX8bdX3cPg7x7MB+GqQ+eHSARKtMMjflcjoqojhYxhZaLD5bXrU65RLuya8jj9E3yLLxJTidvkEPe
        dSV7TlxXrnMrqKXtmVdpGRJkUVSF3OJQ1SOfxc4lr/hHXB5OvlX9YFwXtQHz0RMM50eBl3gq3dEvqYLj
        PYzu76Hbv5eiZjgJcOxfkgXZVzGZM2Bi7QbFZaWxbPIGRTXx3Y+eoEk+T7iABLhC7kiSLRlXkARlNUie
        keKl/0Z7S3oaeVX0xEiejeqidkKqh5Jrabd6l6K+L4inbP/ilzc/pwr1v/xqkkZoyPkjecXuhJlV5Hzq
        Bu3OqaHP0L1/EFXWYj6OqSDrrKtkn3eN8Ei421QS7D3fRR5RPZxNor0lME3NuJXpYapoiLFAN3PxlO1f
        P6cIS3/BwA+9AP2SpH6+T3qedhyU47l+EeZfp68OX6CFkWVPzfq0S2SXW0MfRJbWWBzKuf84cCkyecGl
        pFu9/OLgJs1TF4EXBpLT+S4y8bTtXz8fFhJ+RgKg1AiOB11pHcxn0xZHl9GCiNJnhpPA8mg16iVRYjOE
        3afHmPlWGeLu1yMnGKUp/KqMkACvlImnbf/6KVGo+zkT3XSi+omNXUTLEyrJNucq7tgSmh+uPqyOXaYl
        MWW0LD7JhNthX2Rk61c1AOZ01Sie5QZIMn1yKfpn+x8HfB8vdG3AdK2Bn9MJ6uVyXDf6OLKQ7GD+wogS
        ej/8vFpZFFVCWzOqyTysOIHb4ljcJWF/ZX/aA5M0idP5V8m7og/tOde1vzKI7VkwakxDukA/xasftyhr
        2qi4SMtiy9gkjbA+9QItijxPn8dHdHU817XYuxzGFMMoDcPncSzuaiqGsf3qhwRhyk+4+3+KUy/XDv2L
        FkcU0eb0i2Qeek5jfBBxnlYlVdKHkelfOJzrWuVeZgBjXtU4fJ49515dKIax/erHWGHhj3hW/3hIvYRH
        LaGVhytwdxbTvJCzGmU1EmBe8NkEh+Kuda4lPZo0TN24lfYiB11IgP8iAX7AHftDrHrZHOanNGZucJHG
        +SqhnObIi+rsz3WtcyrWY2M0jsv5Hly2/wT4IVqY8kMMTFMjd2Oeo/khp2l5fBnNCT6jcT6KKsYj4BxZ
        FwxusIc52mBPsT45FOlAAtRHCWPqDwqkTkqiDJSmLAw/S7PlhRpnDlgWc542Zb9L9me7aQ2dSADcsb3r
        o2GcGsmMGEufHCym2UEwSEssiS6mdRmLyA7GaAtbXUgAkgkd/hslkDpJCp9GiyPP0qzA01qDz/dVylqy
        K4I5WsL2TPcxYhjbt76LEMq+jxRIXYSHLqBFmALODCzQGovCi+jL5DV3YQoboxXsCrv3FkPYvvVduBD2
        fQTMUxMBwUvJPPg0/ScgX2ssCj9Dn8ZvP7MbxmgLS135etjdcOELJAGpi+jgWTTD/5RWmScvwJQwKWx3
        YfeG3YV6pGl2FXY/I4av/etOiNDjuzCYpyYSgqfSe34ntc6coMM2u07rKXYpDdIsOwv1dOfPwaxvQ4T8
        u6GYw6uBdLkJved7Quu8HxpsuSXX+Iudp2GQ5mn/M4DG+iZYWIkkIHVwSt6fpvvmaZ25ISFrVyiWdLLJ
        16+3KdAnzaHXYHeiV7v4F7gWqy5K6IgkqP82GCY+I1eC/07vHsjVOnNCwpR3pXWBvqxp49SDdYHeQ99w
        1gndkQuO38gFUgcLZPFkJsvRKjMDI9/idqzLmtjDOl+/wTr/NdIENif1ZygDpmuqkwkd64KE2jtBAj0r
        W3130Tv7c7TK3MCY+92y1cnXvKxOvUbqZscp/TJLhcmfxNPonm77CwvvBMLEZyTEbzZN88nWIsdrxSYo
        BZM67jj1Wg2Aaepje76+7nwbuDndDhCi6gIEehbO+3dhU7TJ/S+HqrT1xOum20++Tupi24nXlF8903ld
        DxVeqPMTiuv8YeYzsNTHn6Z6H9MOnhlN/gPqtrzXN2w/AQOfnRrLnN/JfwezrsuEl28jCQA9LZ4+H9VM
        8cokbTDNK6vZ/9dDEjhuO9EDd/BTktejbluu3mP/uVXnxElw64CQd8tXoKegRiZbqPdvj4z6f3tmkGY5
        midecrPaktvDcmteD3oatuT00P3nfnO6LRPMkQT0pFTJXlzJn3/fI8xxsudR0iSmHkeWKi/2EeKRO4y8
        uyW3Jz0ROT2KxUP8PlUrE8bclAn0pBTL/qX8jSBLD8tOpu5H6iZ5HCFNAPNrTGSKFv1VbnNOz+OWOT3p
        Sdic3Wu7+PHfp27IhCm35ALV7n8CkADix5Wa6xG61NQ9nTSCW/oX4mkeq03ZPWt2nhxIm3N6tYgtOb2R
        AH3axO8ctZpqfQR5XRRM9Wk5t4IFqvR5UflbACpNdEtLNnVTwDB1kpZvYqlo0UuZrbn9TWzz3yTrEwNo
        U3avFmGXb4yyp+79FkBLRArhTzBz5c1ATOmiBbrh3XLq4gS67i0oFJbCfXMsZatenrAvrXriPgWpBde0
        +oluiS36xZBt2f2MNmb1rjpw3ow2HjdoMa5nxtG2nDfqN+Lz4qF0Xzzyh3lrQfWtMIG+SYOp6NZveLUc
        TpjbkUgCLyE5XxwLsLZ5bzSYsC+1BolAz0Zqw8R9iY98H8+Dvq3ZA8y+PmaQbJU3kHxL3iPH/FG0Icug
        xWzNNiT/0hm06Xifuk2Z/XTz/b9KNT6C8XVPQX7DR6i/DQPvHoX5yTAUUzqsfzKQBHcSQQI+j+Nd9xDc
        8r26KX/MYSOSYLxrSs1411R6Wia6xylnGE3JMmfoyxuP9V/7dWbvartTb5Ff6X8orHIhORaY0NfHej8x
        dqdGUnC5Oe06MYzWHzM4vjnLyNxSoSO/DlIlEzpc8xKW1rgL+bX89i4exmegPPSr8dc8ngEkwi2MHb7l
        4+GRUItHCc5VW+Mh+Mvcpm8f55JCT8PbLinFJoqHn/ubjhobr8voI9+UZVjvfHoihVQsJP+S2TBwFH2d
        2YfWPwNWuW9SYNk89AZzyCF/DHqENxqwXsGJZnnMsP39h/AVmdAbBjnDjLqb3M2n/trVcx0m0TV3NYIx
        wa0IHD9FTAb0DDdDBXrPNYTGOSc/Mab7Yu6/8rVQzHxhzZHBS9ce7XPGOncYeZ+bjrv9Q3IvmoZn9xBC
        QqiVnSdGkk/xexReuZgCSueSS+EkJIcxb6vakNnfcVOW0cg2+5dCwoAMpptddROS8Zyn2wdhyJFf784b
        uPtr3DQPJ1ctZgh8ztnufjTeJZne3pv0REzxDu7/Wczc3itSRzuvz+hf53BqPAWWzqcg4HBqHG3IfIPW
        Hu2rUdZn9CPr3BHkWjiFgsoWUEj5IvIoMlOuwzXVrjna121T1uAmf8RK60I33/GKu7D26j6h+gaP6HEH
        fqPAXYi7kg3Beq1Tua8DTXY5RO/6HKGxew+3mMluqWQRN+W4ZdZg2lc4jULLPyKvszPIKmcErTnSt9Xg
        63HKn0S+5+dRWMXH5H7GTHlNa4/0rV531NDS8riR9n84GwOxHgi2M+74+lp07XfQxbP5NwJEI1xbD3fn
        WTTH7xhNckuhMU6JLYY/syLeiuRlixHwKbQhYyCtTu/XpuBrcjhpSn7n0SuVfUh7C6bS5mNDaFV639iv
        jwzS/A9KVLsJRpddhKirnkLDTQzC+G6/hVF9DZ7FV1xal1KXv5HH3vdokksCfXYwn0z2JDwRSyJOYP5/
        iD5LMKVVin5tns2ZbyIBpiFhPyLvs3PIKnsUrUzrl7/myAD1f6OYja92FqLY6FsxuOMxsKvFYOsKnr2X
        nVuXbOfutMNpGU3aE0mzfTNpdeIZmuKeSqMd45+Id73TaXlsAY13PkgLwhfRilRDBLR/m2e1wpBsct4m
        3+IFSqyyTXDt/fPXHx06TrTv6XXFQ+h0ea/ghbLhJgZ2dRhtXw8Sg7+39bi49w8U4TSSLBytaKLLYfog
        +DitTzpLX8Tm0zueaTTaIe6pmOePBEoopPd80mmCqx/NC7agTxNH0QoEuj2wJest9AbmJDu3AD3ECPoq
        tZ8MM4ene69wyUkwh9F1/IxXGV+N4Fc7tR5nnDrSHse5NNXBn8y80sgi6iR9nXyWFodmYxCXTKMcDj0z
        73im0iokwVdxBTTXP4MmuCQiGWQ0038tLY6eTl+mGCGwb7Rpdhwfi97gQ3I8+Q59lWJYvDp1SMu/cMJT
        ukt7BNlVfu/OAzskAN/x1Xtaj8OOyHCHdTRuTyzN9cuglfGnlXB9zJ44ess+Vq2Msj9E070V9ElknjLB
        VsSdpoXyLJrmkYrxQgRN87Gi+WEL6PPDQ5AQhm2SFakDMZidQZ5F85EEA2pWpQ56XbS4eSnNdxAyajB3
        vxUP490FuuTYOpQ6dCAv+yk0086NJu1LUt7l65KKaGlEntKIkXaxWoGTYZpHivIxswJJx9fwUVgOTfdR
        kIljNE3x3EXvh86nzxKH0BfJhm0Oq+Om5FZoTsuT38h/7Iukiw6Cc40fBngY4aMXICxrnVz7zrTFbglN
        tJcrg/x5zClalVhI7wceo7G420fYxrQq/EjgRwNf1zr0DkuQkGZePOgMp6ne2+iDiOm0PMmoTWF1fDJt
        z5pIXyYPav7rZwh+P4z0qTYSRthrn3i7/mRhuxF31SEyD8hUPoc/jT6pDO5Iuxgavvtgm2MMrnXmgXRl
        Mqw5fAa9RBaZuh7GY+IAxgwWtCx+GB4TA9oEu3LMuHzo6+33VWUnbOCu/yK63wt22qHC7g8UZvsmzd7t
        gOlXPC0KOY5pXKEykBMwnx+2O7rd8LYTZhEBGcrB4+cxJ2nGfgXGExH0zv51tCT2LcwmBrQq6xWjySJx
        gEK0+2FV2gqyS64CVdlqB//do8ls1z6a5JqIwVYunq8FNMfvCI22j6Fhu6LaLcPBVPckjFVy8eg6rWzT
        KE4En7W09NBwskgY2Gosix/4iATYJcguYppXtVuzxOwypFk77ckUd/jSiBxaHnsS8+5UZeCMd0bqFOPQ
        KyyU8yvmApopUyARAmlW4AdsROsQ94gEqNgpyC5gro1E0Ah5O/9Bn9uswnMzBqPobGU3+Y5nMgIVQW/a
        6DZjHGMxizlOnx08SRPwqDN1204fxxjTJ3GDtMxjEqAKo3CUaifMZhCN33mAZvum05dx+ZhjpyqNH2oT
        /rti0r4EcXyQhoGiMy2OfguPhcFaY8mhQc0nQLm14KU0zEa97LX+N7q+aPokKpcWyDMxeo6kIdZhv1uG
        7YqgD9Eb8M0wxsmePooZSh/HDtEKH8UMbv4fUMtthClNGfgsuFqbKs1fFp1Hk5H9g61CJcAQqzCaj5th
        kmsCmcmWwBg2RwscHPzo/0MosxZmIxFiK6wFxbOSbK1fPGJnCC3BQG80kmDwjhCJRgxFIswPykCP4E0f
        Hhyq0CjRQxIea766NWi73H/mgTQauyeGBm0PkWiCcU6HaMTuCDJxcuoqhk13NHCbvNrMK5kGbg+WaIZB
        YKh1KJnYuGn/a12a1oBtQXdH2UXRgG1yicdgYiPTvQQw2hp419gmjIy2Bkk8hgnb/fQtLS3/oIKI/keF
        GM7WVeMLUl1kaGjoHxUKxZ8YDw+PPzfGySn+L4ZbAulNdG9cSjwac1v/vrZ+fn9j/EQQx+dDQkL+Gh8f
        /5cH46uKO3ug1qRRGawyl0/GF8AXgvrzfGHY9oK/v///BgYGvgQ6Yds/g4KC/sXIZLKXsa2zXC5/1dAy
        AM+3EOJS4tGsd/cfh1j2foCe4DWOJceUY6uKM8cc2zqBl9gL9qSppGmcJI9MDN6BP8Af9vb2fpEPzCdR
        mckXAviCemNdX1yEoa+v7xCcdERAQMBorBuDciyW3wYTsDzlDUv/n4y2BBBKicdg7xOwHDFbyCB+CxDL
        +ajPRX0Gx5JjyrHlGGOZYz0ayyPYA/YC6/qyN6JH95NGTJSX2FP2lj1mr0XbfxVnCGcOduyEA3cXDzYY
        9ZGojwN8AXwhc/nCUF+E7UtQXw7WgI3YthmlJcotKHegtJ2606+i/2Y/kng046x8axGzAyoQOxnK/Sg9
        UTpzLFFyTDm2HGOO9UbAsV/OXrAnqP8macA4rBvJXqLeF/Xu7DF7zZ4rzeds4MzADp3xQSOUE7HjPOy4
        DPXVqPMJd6Hci5IvaD/wBUEgEuviUCaBFJCK5TRwBGR5+/rnm9v61b211e8n462+Dcyw5tji+7OK4Vv9
        ftFFGreR2zx8m2/DrN2+d91k/mWI3blGnEX8isBpcIJjCTimaRxjwLFOwjLHPhKwF+yJKmnYK/aMvVvN
        XqI+D/WJosfcM/xV2RNwJuDZ0hErDbDTZOzwGUob4IV1wSAG9RSUmSjzUOaD06jzRZaCC6hXg8uoX2FQ
        r0F5A9wCd7D8DfgW9bvNge3fg3rUfwA/Mlj+SRdQtYfbhuV68D3qTcaBwfZvwTeo3wEcwxtY5piq4nsZ
        VKN+AZSizl5wsuSjzh6xV+xZDAhG3QvYiN5OxjoD9lzZC/AgARnyEp4j/bDDu9hhDXZwQRmCMh6ko54N
        CsA5LLPpFYBPzhfEF3cTJV8ocxvLdYAb8R2W/4uSG60yt0mwnQPVIPKzjqJsn9jWJuPANIoXx+47wLGs
        w/JtoIwzljnmfJOxB+wFe8LJwD0Ie5WN5XQQjzp7yZ6uYY/Za/acvVf2ADxAwAZ97MCDufd5R5Q7xQ/5
        AO5iosSDcdfD3byyRwB8sjNYLkJ5FvAFlGCZL+gS4Iy9CjiDrz0I1l8HNwEnzWN7ivYMt01sI7eV23wd
        65uKSQ24ijqbyzGswHIJuP94QHkGcOyVdzzgxwN7wx5FAfbMB8suYCfq7Cl7y4NHffZc2QPw1ACV5zgj
        eAPKwWC82BvMQ8kDPh4PrABfAx6A7AC7AQ9QlOMClDxw4QGMH5Cj3tz44D5Yp0CZAXIAd1/cKE4iVSLp
        Eqp28c3Cj1FucwaWOQYPxuWh5zxKOfBD/aFBImAveJC4GbBHK9gz9g7r2cN32VP2VvT4Jfb8/rSQKzw9
        wMa/YVrxfwcOHOjCO6Lei7sLMBDLxjjwKByQp3rKaR7KxjODBajzFKbZGUITbAM83nDEPm4ofVAqE0kX
        EdvGbeS2OgJuO8fgodiIMXtopI/1zU4TsY6niKNQN2bP2Dv2EMv67Cl7izq/K/hzk+8EeFQovjh4Tpwz
        Pi92FX/H8j+A8oUPTvLQuwEGJ+gjJkyT7wgeBOvHYZ9JqJuhPgvHMEf9fjLpEtwmbhu3EcuzuM3cdtR5
        qtZUbB6a64uG9lHFG/xmzs/esEfsFXvG3rGH7CV7yt4+9A6gOXGGMPwBBge4/2aQefDtoArs1+xbwgfh
        N1ucmWhod3y2Bz5nIDZMZ+E2clu5zdz2xm/3HoRjh8889LZPhcrcxq+KxRv4odfDoq3qlergjRNFhSph
        GidNU2C/5xCEDtyQxo3TZbit3GZue1MxUaGKX2NDVTSOvWhH+1ZziaRr6JRpkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkqQ2KEH4fwXjKznQ432XAAAAAElFTkSuQmCC
</value>
  </data>
</root>